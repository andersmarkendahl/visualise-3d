name: Multi Platform Build

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checking out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Loading Cache for platform
      - name: Loading Cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      # Build for each platform
      - name: Building for ${{ matrix.targetPlatform }}
        uses: game-ci/unity-builder@v2.0.3
        # You may pin to the exact commit or the version.
        # uses: game-ci/unity-builder@4be5d2ddf4e0f4f16799576555bf7d2fc1c61c08
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildName: visualise-3d 
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Semantic
      # Manual Packaging
      - name: Create Archive
        env:
          PM: ${{ matrix.targetPlatform }}
        run: tar -cvf $PM.tar ./build/$PM
      # Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      # Upload release Asset
      - name: Upload Release Assets
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: build/${{ matrix.targetPlatform }}.tar
          asset_name: ${{ matrix.targetPlatform }}.tar
          asset_content_type: application/tar
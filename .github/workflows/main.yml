# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Unity - Builder
        # You may pin to the exact commit or the version.
        # uses: game-ci/unity-builder@4be5d2ddf4e0f4f16799576555bf7d2fc1c61c08
        uses: game-ci/unity-builder@v2.0.3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          # Platform that the build should target.
          targetPlatform: StandaloneOSX 
          # Version of unity to use for building the project. Use "auto" to get from your ProjectSettings/ProjectVersion.txt
          # unityVersion: # optional, default is auto
          # Specific docker image that should be used for building the project
          #customImage: # optional, default is 
          # Relative path to the project to be built.
          #projectPath: # optional, default is 
          # Name of the build.
          #buildName: visualise-3d 
          # Path where the builds should be stored.
          #buildsPath: # optional, default is 
          # Path to a Namespace.Class.StaticMethod to run to perform the build.
          #buildMethod: MacOS.Build 
          # Custom parameters to configure the build.
          #customParameters: # optional, default is 
          # The version, when used with the "Custom" versioning scheme
          #version: # optional, default is 
          # The android versionCode
          # Github private token to pull from github
          #gitPrivateToken: # optional, default is 
          # User and optionally group (user or user:group or uid:gid) to give ownership of the resulting build artifacts
          #chownFilesTo: # optional, default is 
